# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /projects                                                            controllers.Application.projects
POST        /projects                                                            controllers.Application.createProject(name:String)
GET         /projects/:projectId                                                 controllers.Application.getProject(projectId:Long)

GET         /projects/:projectId/Flavours                                        controllers.Application.listFlavours(projectId: Long)
POST        /projects/:projectId/Flavours                                        controllers.Application.createFlavour(projectId: Long,name :String )
#GET     /projects/:projectId/Flavours/:flavourId
#GET     /projects/:projectId/Flavours/:flavourId/executions
#GET     /projects/:projectId/Flavours/:flavourId/executions/:runId/:testId/:testVersionId

GET         /projects/:projectId/Sequences                                       controllers.Application.listSequences(projectId: Long)
POST        /projects/:projectId/Sequences                                       controllers.Application.createSequence(projectId: Long,name:String,spec:String)
GET         /projects/:projectId/Sequences/:sequenceId                           controllers.Application.getSequence(projectId: Long,sequenceId :Long)
POST        /projects/:projectId/Sequences/:sequenceId                           controllers.Application.createNewSequenceVersion(projectId: Long,sequenceId :Long,parentId : Long,spec : String)
GET         /projects/:projectId/Sequences/:sequenceId/:sequenceVersionId        controllers.Application.getSequenceVersion(projectId: Long,sequenceId :Long,sequenceVersionId: Long)

#GET     /projects/:projectId/referenceImages
#POST    /projects/:projectId/referenceImages
#GET     /projects/:projectId/referenceImages/:referenceImageId
#POST    /projects/:projectId/referenceImages/:referenceImageId
#GET     /projects/:projectId/referenceImages/:referenceImageId/:referenceImageVersionId


GET         /projects/:projectId/resultImages                                    controllers.Application.listResultImages(projectId :Long)
POST    /projects/:projectId/resultImages                                        controllers.Application.addResultImage(projectId: Long)
GET         /projects/:projectId/resultImages/:resultImageId                     controllers.Application.getResultImage(projectId :Long, resultImageId :Long)

#GET     /projects/:projectId/testExecutables
#POST    /projects/:projectId/testExecutables
#GET     /projects/:projectId/testExecutables/:executableId

GET         /projects/:projectId/Tests                                           controllers.Application.listTests(projectId: Long)
POST        /projects/:projectId/Tests                                           controllers.Application.createTest(projectId: Long,name:String,spec:String)
GET         /projects/:projectId/Tests/:testId                                   controllers.Application.getTest(projectId: Long,testId :Long)
POST        /projects/:projectId/Tests/:testId                                   controllers.Application.createNewTestVersion(projectId: Long,testId :Long,parentId : Long,spec : String)
GET         /projects/:projectId/Tests/:testId/:testVersionId                    controllers.Application.getTestVersion(projectId: Long,testId :Long,testVersionId: Long)

#GET     /getWork
#GET     /execute

# binaries
GET         /resultImage/:id                                                     controllers.Application.getBinaryResultImage(id:Long)
GET         /referenceImage/:id                                                  controllers.Application.getBinaryReferenceImage(id:Long)
GET         /testExecutable/:id                                                  controllers.Application.getTestExecutableBinary(id:Long)



# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                                                        controllers.Assets.versioned(path="/public", file: Asset)
